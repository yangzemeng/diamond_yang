<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace是命名空间，作用sql语句的隔离，后面还有重要作用 
#{}作用就是占位符，相当于jdbc的“?”
parameterType：查询的参数类型
resultType：查询结果的数据类型，如果时候pojo应该给全路径。
-->
<!-- mapper代理的开发规则：
	1、namespace必须时候接口的全限定名
	2、Statementid必须和接口的方法名称一致
	3、接口方法的参数类型要和parameterType要一致
	4、接口方法的返回值类型要和resultType一致
 -->
<mapper namespace="cn.itheima.mybatis.mapper.UserMapper">
	<!-- 别名不区分大小写 -->
	<select id="getUserById" parameterType="int" resultType="USer">
		SELECT * FROM `user` WHERE id=#{id};
	</select>
	
	<!-- 如果查询结果返回list， resultType设置为list中一个元素的数据类型
		${}字符串拼接指令
	-->
	<select id="getUserByName" parameterType="string" resultType="cn.itheima.mybatis.po.User">
		SELECT * FROM `user` WHERE username LIKE '%${value}%'
	</select>
	<!-- 参数时候pojo时，#{}中的名称就是pojo的属性 -->
	<insert id="insertUser" parameterType="cn.itheima.mybatis.po.User">
		<!-- keyProperty：对于pojo的主键属性 
			resultType:对应主键的数据类型
			order：是在insert语句执行之前或者之后。
			如果使用uuid做主键，应该先生成主键然后插入数据，此时应该使用Before
		-->
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT into user (username,birthday,sex,address) 
		values (#{username}, #{birthday}, #{sex}, #{address})
	</insert>
	
	<select id="getUserByQueryVo" parameterType="queryvo" resultType="user">
		SELECT * FROM `user` WHERE id=#{user.id};
	</select>
	
	<!-- 查询用户表中的记录数 -->
	<select id="getUserCount" resultType="int">
		SELECT count(*) FROM `user`
	</select>
	
	<sql id="find_user_list_where">
		<where>
			<if test="id!=null">
				and id=#{id}
			</if>
			<if test="username != null and username != ''">
				and username like '%${username}%'
			</if>
		</where>
	</sql>
	<sql id="user_field_list">
		id,username,birthday,sex,address
	</sql>	
	<select id="findUserList" parameterType="user" resultType="user">
		select <include refid="user_field_list"/> from user
		<include refid="find_user_list_where"/>
	</select>
	<!-- 动态sql foreach测试 -->
	<select id="findUserByIds" parameterType="queryvo" resultType="user">
		SELECT 
			<include refid="user_field_list"/>
		 FROM `user` 
		<where>
			<!-- and id in(1,10,20,21,31) -->
			<foreach collection="ids" item="id" open="and id in(" close=")" separator=",">
				#{id}
			</foreach>
		
		</where>
	</select>
</mapper>